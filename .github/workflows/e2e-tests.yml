name: E2E Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: netdocgen
          POSTGRES_PASSWORD: netdocgen123
          POSTGRES_DB: netdocgen_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      
      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
        options: --health-cmd "curl -f http://localhost:9000/minio/health/live"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r api/requirements.txt
        pip install -r api/requirements-dev.txt
    
    - name: Set up test environment
      env:
        DATABASE_URL: postgresql://netdocgen:netdocgen123@localhost:5432/netdocgen_test
        REDIS_URL: redis://localhost:6379
        MINIO_ENDPOINT: localhost:9000
        MINIO_ACCESS_KEY: minioadmin
        MINIO_SECRET_KEY: minioadmin
        JWT_SECRET_KEY: test-secret-key-for-e2e
      run: |
        cd api
        alembic upgrade head
        python -m pytest -xvs tests/conftest.py::test_setup_e2e_data
    
    - name: Start backend server
      env:
        DATABASE_URL: postgresql://netdocgen:netdocgen123@localhost:5432/netdocgen_test
        REDIS_URL: redis://localhost:6379
        MINIO_ENDPOINT: localhost:9000
        MINIO_ACCESS_KEY: minioadmin
        MINIO_SECRET_KEY: minioadmin
        JWT_SECRET_KEY: test-secret-key-for-e2e
      run: |
        cd api
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 5
        curl -f http://localhost:8000/health || exit 1
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Cypress run
      uses: cypress-io/github-action@v6
      with:
        working-directory: frontend
        start: npm start
        wait-on: 'http://localhost:3000'
        wait-on-timeout: 120
        browser: chrome
        record: false
      env:
        REACT_APP_API_URL: http://localhost:8000
        CYPRESS_API_URL: http://localhost:8000
        CI: true
    
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots
        path: frontend/cypress/screenshots
        retention-days: 7
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos
        path: frontend/cypress/videos
        retention-days: 7