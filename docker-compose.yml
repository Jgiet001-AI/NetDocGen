services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: netdocgen_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
      - ./shared:/app/shared
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/netdocgen_dev
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      SECRET_KEY: dev-secret-key
      OLLAMA_URL: http://ollama:11434
    depends_on:
      - postgres
      - redis
      - minio
      - rabbitmq

  parser:
    build:
      context: ./parser
      dockerfile: Dockerfile
    volumes:
      - ./parser:/app
      - ./shared:/shared
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - rabbitmq
      - minio

  generator:
    build:
      context: ./generator
      dockerfile: Dockerfile
    volumes:
      - ./generator:/app
      - ./shared:/shared
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - rabbitmq
      - minio

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api

volumes:
  postgres_data:
  minio_data:
  ollama_data: