apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: netdocgen
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: netdocgen
spec:
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
      protocol: TCP
    - name: management
      port: 15672
      targetPort: 15672
      protocol: TCP
  selector:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: netdocgen
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: netdocgen
data:
  rabbitmq.conf: |
    default_user = admin
    default_pass = changeme-in-production
    
    ## Memory and Disk Limits
    vm_memory_high_watermark.relative = 0.6
    disk_free_limit.absolute = 2GB
    
    ## Clustering
    cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = hostname
    cluster_formation.k8s.service_name = rabbitmq-headless
    cluster_formation.k8s.hostname_suffix = .rabbitmq-headless.netdocgen.svc.cluster.local

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: netdocgen
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: netdocgen
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: 4369
    - name: cluster
      port: 25672
      targetPort: 25672
  selector:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: netdocgen
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: netdocgen
spec:
  serviceName: rabbitmq-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/component: messaging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        app.kubernetes.io/component: messaging
        app.kubernetes.io/part-of: netdocgen
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 15672
              name: management
            - containerPort: 4369
              name: epmd
            - containerPort: 25672
              name: cluster
          volumeMounts:
            - name: rabbitmq-config
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
          env:
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_NODENAME
              value: rabbit@$(POD_NAME).rabbitmq-headless.netdocgen.svc.cluster.local
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - -q
                - ping
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - rabbitmq-diagnostics
                - -q
                - check_running
            initialDelaySeconds: 20
            periodSeconds: 10
      volumes:
        - name: rabbitmq-config
          configMap:
            name: rabbitmq-config
  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-data
        labels:
          app.kubernetes.io/name: rabbitmq
          app.kubernetes.io/component: messaging
          app.kubernetes.io/part-of: netdocgen
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 5Gi